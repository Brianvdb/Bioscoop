@model PagedList.IPagedList<DomainModel.Models.Zaal>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Zalen</h2>
@using ( Html.BeginForm( "Index", "Film", FormMethod.Get ) ) {
    <div class="input-group input-group-lg">
        @Html.TextBox( "SearchString", ViewBag.CurrentFilter as string, null, new { placeholder = "Zoeken in films", @class = "form-control" } )
        <span class="input-group-btn">
            <button class="btn btn-default" type="submit">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </span>
    </div>
}
<br />
<table class="table">
    <tr>
        <th>
            @Html.ActionLink( "Naam", "Index", new { sortOrder = ViewBag.NameSortParm } )
        </th>
        <th>
            Zitplaatsen
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Naam)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Zitplaatsen)
        </td>
        <td>
            @Html.ActionLink("Wijzigen", "Edit", new { id = item.ZaalId }, new { @class = "btn btn-warning" }) |
            @Html.ActionLink("Verwijderen", "Delete", new { id = item.ZaalId }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}
</table>
Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager( Model, page => Url.Action( "Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter } ) )


<p>
    @Html.ActionLink("Nieuwe zaal", "Create", null, new { @class = "btn btn-default" })
</p>
